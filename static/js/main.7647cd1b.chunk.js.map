{"version":3,"sources":["webgl/initShaderProgram.ts","webgl/actions.ts","webgl/draw.ts","webgl/setupVertices.ts","Renderer.tsx","shaders/mandelbrot/vertexShader.ts","shaders/mandelbrot/fragmentShader.ts","Settings.tsx","serviceWorker.ts","webgl/store.ts","index.tsx"],"names":["initShaderProgram","gl","vertexShaderSource","fragmentShaderSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","validateProgram","VALIDATE_STATUS","console","error","getProgramInfoLog","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","xLength","state","Math","abs","boundaries","yLength","centerZoom","direction","manualZoom","window","innerWidth","innerHeight","x","y","zoomFactor","xw","width","yw","height","draw","vertexAttribPointer","FLOAT","Float32Array","BYTES_PER_ELEMENT","enableVertexAttribArray","uniform1f","getUniformLocation","iterations","radius","uniform1i","mode","smooth","interpolation","samplingRate","uniform4fv","drawArrays","TRIANGLE_FAN","setupVertices","useProgram","verticesBufferObject","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","Renderer","store","this","props","canvas","document","getElementById","getState","getContext","alert","listen","addEventListener","viewport","updateState","resize","onwheel","event","preventDefault","clientX","offsetLeft","clientY","offsetTop","deltaY","zoom","dragger","previousPosition","startDrag","endDrag","move","position","dx","dy","isDragging","dragging","onmousedown","onmouseup","onmousemove","animateIteration","times","requestAnimationFrame","animateZoom","limit","animateRadius","id","React","Component","Settings","isOpen","body","onkeyup","keyCode","setState","renderer","activeMode","modes","size","onClose","hasBackdrop","className","style","display","flexDirection","justifyContent","alignItems","padding","marginTop","marginBottom","fill","min","max","value","onValueChange","disabled","stepSize","onChange","currentTarget","map","index","key","checked","icon","onClick","current","large","useState","useEffect","Boolean","location","hostname","match","createStore","initialState","offset","listeners","fire","listener","newState","push","App","useRef","Fragment","ref","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7647cd1b.chunk.js","sourcesContent":["function initShaderProgram(\n  gl: WebGLRenderingContext,\n  vertexShaderSource: string,\n  fragmentShaderSource: string\n): WebGLProgram | null {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n  const fragmentShader = loadShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  );\n  const shaderProgram = gl.createProgram();\n  if (\n    shaderProgram !== null &&\n    vertexShader !== null &&\n    fragmentShader !== null\n  ) {\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n      console.error(\n        \"Error linking the program: \" + gl.getProgramInfoLog(shaderProgram)\n      );\n      return null;\n    }\n\n    gl.validateProgram(shaderProgram);\n    if (!gl.getProgramParameter(shaderProgram, gl.VALIDATE_STATUS)) {\n      console.error(\n        \"Error validating the program: \" + gl.getProgramInfoLog(shaderProgram)\n      );\n      return null;\n    }\n    return shaderProgram;\n  }\n  return null;\n\n  function loadShader(\n    gl: WebGLRenderingContext,\n    type: number,\n    source: string\n  ): WebGLShader | null {\n    const shader = gl.createShader(type);\n    if (shader !== null) {\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.error(\n          \"Error compiling the shader: \" + gl.getShaderInfoLog(shader)\n        );\n        gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    }\n    return null;\n  }\n}\n\nexport default initShaderProgram;\n","export function xLength(state: any) {\n  return Math.abs(state.boundaries[0] - state.boundaries[1]);\n}\n\nexport function yLength(state: any) {\n  return Math.abs(state.boundaries[2] - state.boundaries[3]);\n}\n\nexport function resize(state: any) {\n  let width = window.innerWidth - state.width;\n  let height = window.innerHeight - state.height;\n\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    boundaries: [\n      state.boundaries[0] - ((width / 2) * xLength(state)) / state.width,\n      state.boundaries[1] + ((width / 2) * xLength(state)) / state.width,\n      state.boundaries[2] - ((height / 2) * yLength(state)) / state.height,\n      state.boundaries[3] + ((height / 2) * yLength(state)) / state.height,\n    ],\n  };\n}\n\nexport function centerZoom(state: any, direction: number) {\n  return manualZoom(\n    state,\n    window.innerWidth / 2,\n    window.innerHeight / 2,\n    direction\n  );\n}\n\nexport function manualZoom(\n  state: any,\n  x: number,\n  y: number,\n  direction: number\n) {\n  const zoomFactor = direction < 0 ? 0.05 : -0.05;\n  const xw = x / state.width;\n  const yw = y / state.height;\n  return {\n    boundaries: [\n      state.boundaries[0] + xw * xLength(state) * zoomFactor,\n      state.boundaries[1] - (1 - xw) * xLength(state) * zoomFactor,\n      state.boundaries[2] + (1 - yw) * yLength(state) * zoomFactor,\n      state.boundaries[3] - yw * yLength(state) * zoomFactor,\n    ],\n  };\n}\n\nexport function zoom(\n  state: any,\n  event: MouseWheelEvent,\n  canvas: HTMLCanvasElement\n) {\n  event.preventDefault();\n\n  if (\n    event.clientX > canvas.offsetLeft &&\n    event.clientX < canvas.offsetLeft + state.width &&\n    event.clientY > canvas.offsetTop &&\n    event.clientY < canvas.offsetTop + state.height\n  ) {\n    return manualZoom(\n      state,\n      event.clientX - canvas.offsetLeft,\n      event.clientY - canvas.offsetTop,\n      event.deltaY\n    );\n  }\n}\n\nexport function dragging() {\n  const DRAGGING = 0;\n  const NO_DRAGGING = 1;\n\n  const dragger = {\n    mode: NO_DRAGGING,\n    previousPosition: [0, 0],\n  };\n\n  function startDrag(event: MouseEvent) {\n    dragger.mode = DRAGGING;\n    dragger.previousPosition = [event.clientX, event.clientY];\n  }\n\n  function endDrag(event: MouseEvent) {\n    dragger.mode = NO_DRAGGING;\n    dragger.previousPosition = [event.clientX, event.clientY];\n  }\n  function move(state: any, event: MouseEvent) {\n    if (dragger.mode === DRAGGING) {\n      const position = [event.clientX, event.clientY];\n\n      const dx =\n        ((dragger.previousPosition[0] - position[0]) * xLength(state)) /\n        state.width;\n      const dy =\n        ((dragger.previousPosition[1] - position[1]) * yLength(state)) /\n        state.height;\n\n      dragger.previousPosition = position;\n      return {\n        boundaries: [\n          state.boundaries[0] + dx,\n          state.boundaries[1] + dx,\n          state.boundaries[2] - dy,\n          state.boundaries[3] - dy,\n        ],\n      };\n    }\n  }\n\n  return {\n    startDrag,\n    endDrag,\n    move,\n    isDragging: () => dragger.mode === DRAGGING,\n  };\n}\n","function draw(\n  gl: WebGLRenderingContext,\n  shaderProgram: WebGLProgram,\n  state: any\n) {\n  gl.vertexAttribPointer(\n    0,\n    3,\n    gl.FLOAT,\n    false,\n    3 * Float32Array.BYTES_PER_ELEMENT,\n    0\n  );\n  gl.enableVertexAttribArray(0);\n  gl.uniform1f(\n    gl.getUniformLocation(shaderProgram, \"iterations\"),\n    state.iterations\n  );\n  gl.uniform1f(gl.getUniformLocation(shaderProgram, \"radius\"), state.radius);\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, \"mode\"), state.mode);\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, \"smooth\"), state.smooth);\n  gl.uniform1i(\n    gl.getUniformLocation(shaderProgram, \"interpolation\"),\n    state.interpolation\n  );\n  gl.uniform1i(\n    gl.getUniformLocation(shaderProgram, \"samplingRate\"),\n    state.samplingRate\n  );\n  gl.uniform1f(gl.getUniformLocation(shaderProgram, \"width\"), state.width);\n  gl.uniform1f(gl.getUniformLocation(shaderProgram, \"height\"), state.height);\n\n  gl.uniform4fv(\n    gl.getUniformLocation(shaderProgram, \"boundaries\"),\n    state.boundaries\n  );\n  gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n}\n\nexport default draw;\n","function setupVertices(gl: WebGLRenderingContext, shaderProgram: WebGLProgram) {\n  gl.useProgram(shaderProgram);\n  const vertices = [\n    -1.0,\n    -1.0,\n    0.0,\n    1.0,\n    -1.0,\n    0.0,\n    1.0,\n    1.0,\n    0.0,\n    -1.0,\n    1.0,\n    0.0,\n  ];\n  const verticesBufferObject = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, verticesBufferObject);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n}\n\nexport default setupVertices;\n","import React from \"react\";\nimport initShaderProgram from \"./webgl/initShaderProgram\";\nimport { zoom, dragging, resize, centerZoom } from \"./webgl/actions\";\nimport draw from \"./webgl/draw\";\nimport setupVertices from \"./webgl/setupVertices\";\nimport vertexShader from \"./shaders/mandelbrot/vertexShader\";\nimport fragmentShader from \"./shaders/mandelbrot/fragmentShader\";\n\ntype RendererProps = {\n  store: any;\n};\n\nclass Renderer extends React.Component<RendererProps> {\n  gl: any;\n\n  componentDidMount() {\n    const store = this.props.store;\n\n    const canvas = document.getElementById(\"webgl\") as HTMLCanvasElement;\n    if (canvas !== null) {\n      canvas.width = store.getState().width;\n      canvas.height = store.getState().height;\n      let gl = canvas.getContext(\"webgl\") as WebGLRenderingContext;\n      if (!gl)\n        gl = canvas.getContext(\"experimental-webgl\") as WebGLRenderingContext;\n      if (!gl) alert(\"Your browser does not support WebGL.\");\n\n      const shaderProgram = initShaderProgram(gl, vertexShader, fragmentShader);\n      if (shaderProgram !== null) {\n        setupVertices(gl, shaderProgram);\n\n        store.listen(() => {\n          gl.useProgram(shaderProgram);\n          draw(gl, shaderProgram, store.getState());\n        });\n\n        window.addEventListener(\"resize\", () => {\n          canvas.width = window.innerWidth;\n          canvas.height = window.innerHeight;\n          gl.viewport(0, 0, canvas.width, canvas.height);\n          store.updateState(resize(store.getState()));\n        });\n\n        canvas.onwheel = (event) => {\n          store.updateState(zoom(store.getState(), event, canvas));\n        };\n\n        const dragger = dragging();\n        canvas.onmousedown = (event) => {\n          dragger.startDrag(event);\n        };\n\n        canvas.onmouseup = (event) => {\n          dragger.endDrag(event);\n        };\n\n        canvas.onmousemove = (event) => {\n          if (dragger.isDragging()) {\n            store.updateState(dragger.move(store.getState(), event));\n          }\n        };\n\n        this.animateIteration();\n      }\n    }\n    //this.animateZoom();\n  }\n\n  animateZoom(direction = -1, times = 0) {\n    const { store } = this.props;\n    if (times < 50) {\n      store.updateState(centerZoom(store.getState(), direction));\n      requestAnimationFrame(() => this.animateZoom(direction, times + 1));\n    }\n  }\n\n  animateIteration(limit = 100) {\n    const { store } = this.props;\n    const { iterations } = store.getState();\n    if (iterations < limit) {\n      store.updateState({ iterations: iterations + 1 });\n      requestAnimationFrame(() => this.animateIteration(limit));\n    }\n  }\n\n  animateRadius(limit = 2) {\n    const { store } = this.props;\n    const { radius } = store.getState();\n    if (radius < limit) {\n      store.updateState({ radius: radius + 0.01 });\n      requestAnimationFrame(() => this.animateRadius(limit));\n    }\n  }\n\n  render() {\n    return <canvas id=\"webgl\"></canvas>;\n  }\n}\n\nexport default Renderer;\n","export default `\nprecision mediump float;\nattribute vec2 vPosition;\nvoid main(void)\n{\n\tgl_Position = vec4(vPosition, 0.0, 1.0);\n}\n`;\n","export default `\nprecision highp int;\nprecision highp float;\n\nconst int MAX_ITER = 65535;\nconst int MAX_SAMPLING_RATE = 4096;\nuniform float iterations;\nuniform int samplingRate;\nuniform float width;\nuniform float height;\nuniform vec4 boundaries;\nuniform float radius;\nuniform int mode;\nuniform int smooth;\nuniform int interpolation;\n\nvarying float totalIterations;\n\nvec2 complexMultiplication(vec2 z1, vec2 z2)\n{\n\treturn vec2(z1.x * z2.x - z1.y * z2.y, z1.x * z2.y + z1.y * z2.x);\n}\n\n// https://github.com/hughsk/glsl-hsv2rgb/blob/master/index.glsl\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat mandelbrot(vec2 c)\n{\n\tvec2 z = vec2(0, 0);\n\tfloat n = 0.0;\n\tfor (int i = 0; i < MAX_ITER; i++) {\n\t\tif (length(z) > radius) {\n\t\t\tbreak;\n\t\t}\n\t\tif (n > iterations) {\n\t\t\tbreak;\n\t\t}\n\t\tz = complexMultiplication(z, z) + c;\n\t\tn++;\n\t}\n\treturn float(n);\n}\n\nfloat optimizedMandelbrot(vec2 c)\n{\n\tfloat n = 0.0;\n\tfloat x2 = 0.0;\n\tfloat y2 = 0.0;\n\tfloat x = 0.0;\n\tfloat y = 0.0;\n\tfloat bound = radius * radius;\n\tfor (int i = 0; i < MAX_ITER; i++) {\n\t\tif (x2 + y2 > bound) {\n\t\t\tbreak;\n\t\t}\n\t\tif (n > iterations) {\n\t\t\tbreak;\n\t\t}\n\n\t\ty = 2.0 * x * y + c.y;\n\t\tx = x2 - y2 + c.x;\n\t\tx2 = x * x;\n\t\ty2 = y * y;\n\n\t\tn++;\n\t}\n\n\treturn float(n);\n}\n\nfloat smoothMandelbrot(vec2 c)\n{\n\tfloat n = 0.0;\n\tfloat x2 = 0.0;\n\tfloat y2 = 0.0;\n\tfloat x = 0.0;\n\tfloat y = 0.0;\n\tfor (int i = 0; i < MAX_ITER; i++) {\n\t\tif (x * x + y * y > pow(2.0, 8.0)) {\n\t\t\tbreak;\n\t\t}\n\t\tif (n > iterations) {\n\t\t\tbreak;\n\t\t}\n\n\t\ty = 2.0 * x * y + c.y;\n\t\tx = x2 - y2 + c.x;\n\t\tx2 = x * x;\n\t\ty2 = y * y;\n\n\t\tn++;\n\t}\n\n\tif (n < iterations) {\n\t\treturn float(n) + 1.0 - log((log(x * x + y * y) / 2.0) / log(2.0)) / log(2.0);\n\t}\n\n\treturn float(n);\n}\n\nfloat sampling (float x, float y) {\n\tvec2 c = vec2(boundaries.x + x * (boundaries.y - boundaries.x) / (width), boundaries.z + y * (boundaries.w - boundaries.z) / (height));\n\n\tif (smooth == 1) {\n\t\treturn smoothMandelbrot(c);\n\t}\n\treturn optimizedMandelbrot(c);\n}\n\nfloat superSampling(float x, float y) {\n\tfloat change = 1.0 / (float(samplingRate) + 1.0);\n\tfloat m = float(MAX_ITER);\n\tfor (int i = 1; i < MAX_SAMPLING_RATE + 1; i++) {\n\t\tif (i > samplingRate) {\n\t\t\tbreak;\n\t\t}\n\t\tfor (int j = 1; j < MAX_SAMPLING_RATE + 1; j++) {\n\t\t\tif (j > samplingRate) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfloat tmp = sampling(x + float(i) * change, y + float(j) * change);\n\t\t\tif (tmp < m) {\n\t\t\t\tm = tmp;\n\t\t\t}\n\t\t}\n\t}\n\treturn m;\n}\n\nvec3 bwRender(float m) {\n\tint color = 1 - int(m / iterations);\n\treturn vec3(color, color, color);\n}\n\nvec3 greyRender(float m) {\n\tfloat color = 1.0 - float(m) / float(iterations);\n\treturn vec3(color, color, color);\n}\n\nvec3 colorRender(float m) {\n\tfloat hue = m / iterations;\n\tfloat saturation = 1.0;\n\tfloat value = m < iterations ? 1.0 : 0.0;\n\treturn hsv2rgb(vec3(hue, saturation, value));\n}\n\nint func_mod(int x, int y) {\n\treturn int(float(x)-float(y)*floor(float(x)/float(y)));\n}\n\nvoid main(void)\n{\n\n\tfloat x = gl_FragCoord.x - 0.5;\n\tfloat y = gl_FragCoord.y - 0.5;\n\n\tfloat m = superSampling(x, y);\n\n\tvec3 color1;\n\tvec3 color2;\n\n\tif (mode == 0) {\n\t\tcolor1 = colorRender(m);\n\t\tcolor2 = colorRender(m + 1.0);\n\t}\n\n\tif (mode == 1) {\n\t\tcolor1 = greyRender(m);\n\t\tcolor2 = greyRender(m + 1.0);\n\t}\n\n\tif (mode == 2) {\n\t\tcolor1 = bwRender(m);\n\t\tcolor2 = bwRender(m + 1.0);\n\t}\n\n\tvec3 color = color1;\n\tif (interpolation == 1){\n\t\tcolor = mix(color1, color2, m); \n\t}\n\n\tgl_FragColor = vec4(color, 1.0);\n}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Drawer,\n  NumericInput,\n  Label,\n  Button,\n  Checkbox,\n} from \"@blueprintjs/core\";\nimport { centerZoom } from \"./webgl/actions\";\n\ntype SettingsProps = {\n  store: any;\n  iterations: number;\n  samplingRate: number;\n  renderer: any;\n  activeMode: number;\n  smooth: boolean;\n  interpolation: boolean;\n  radius: number;\n  modes: Array<string>;\n};\n\nclass Settings extends React.Component<SettingsProps> {\n  state = {\n    isOpen: false,\n  };\n\n  componentDidMount() {\n    document.body.onkeyup = (event) => {\n      if (event.keyCode === 32) {\n        this.setState({ isOpen: !this.state.isOpen });\n      }\n    };\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const {\n      store,\n      iterations,\n      samplingRate,\n      renderer,\n      radius,\n      activeMode,\n      modes,\n      smooth,\n      interpolation,\n    } = this.props;\n    return (\n      <Drawer\n        size={220}\n        isOpen={isOpen}\n        onClose={() => this.setState({ isOpen: false })}\n        hasBackdrop={false}\n        className=\"bp3-dark\"\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-start\",\n            padding: 20,\n          }}\n        >\n          <strong>Shader:</strong>\n          <div\n            className=\"bp3-select bp3-fill\"\n            style={{ marginTop: 5, marginBottom: 15 }}\n          >\n            <select>\n              <option>Mandelbrot</option>\n            </select>\n          </div>\n          <Label>\n            <strong>Iterations:</strong>\n            <NumericInput\n              className=\"bp3-dark\"\n              fill={true}\n              min={1}\n              max={10000}\n              value={iterations}\n              onValueChange={(value) => {\n                store.updateState({ iterations: value });\n              }}\n            />\n          </Label>\n          <Label>\n            <strong>Radius:</strong>\n            <NumericInput\n              disabled={smooth}\n              className=\"bp3-dark\"\n              fill={true}\n              min={0}\n              max={5}\n              stepSize={0.1}\n              value={radius}\n              onValueChange={(value) => {\n                store.updateState({ radius: value });\n              }}\n            />\n          </Label>\n          <Label>\n            <strong>Sampling Rate: </strong>\n            <span className=\"bp3-text-muted\">(NxN)</span>\n            <NumericInput\n              className=\"bp3-dark\"\n              fill={true}\n              min={1}\n              max={64}\n              value={samplingRate}\n              onValueChange={(value) => {\n                store.updateState({ samplingRate: value });\n              }}\n            />\n          </Label>\n          <strong>Mode:</strong>\n          <div\n            className=\"bp3-select bp3-fill\"\n            style={{ marginTop: 5, marginBottom: 15 }}\n          >\n            <select\n              onChange={(event) => {\n                store.updateState({ mode: event.currentTarget.value });\n              }}\n              value={activeMode}\n            >\n              {modes.map((mode, index) => {\n                return (\n                  <option value={index} key={mode}>\n                    {mode}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <strong>Extra Options:</strong>\n          <div className=\"bp3-fill\" style={{ marginTop: 5, marginBottom: 5 }}>\n            <Checkbox\n              checked={smooth}\n              onChange={() => {\n                store.updateState({ smooth: !smooth });\n              }}\n            >\n              Smooth\n            </Checkbox>\n            <Checkbox\n              checked={interpolation}\n              onChange={() => {\n                store.updateState({ interpolation: !interpolation });\n              }}\n            >\n              Interpolation\n            </Checkbox>\n          </div>\n          <strong>Animations:</strong>\n          <div style={{ marginTop: 5, width: \"100%\" }}>\n            <Button\n              style={{ marginBottom: 15 }}\n              icon=\"function\"\n              fill={true}\n              onClick={() => {\n                const limit = iterations;\n                store.updateState({ iterations: 0 });\n                renderer.current.animateIteration(limit);\n              }}\n            >\n              Animate Iteration\n            </Button>\n            <Button\n              style={{ marginBottom: 15 }}\n              icon=\"function\"\n              fill={true}\n              disabled={smooth}\n              onClick={() => {\n                store.updateState({ radius: 0 });\n                renderer.current.animateRadius();\n              }}\n            >\n              Animate Radius\n            </Button>\n            <Button\n              style={{ marginBottom: 15 }}\n              icon=\"function\"\n              fill={true}\n              onClick={() => {\n                renderer.current.animateZoom(-1);\n              }}\n            >\n              Animate Zoom In\n            </Button>\n            <Button\n              style={{ marginBottom: 15 }}\n              icon=\"function\"\n              fill={true}\n              onClick={() => {\n                renderer.current.animateZoom(1);\n              }}\n            >\n              Animate Zoom Out\n            </Button>\n          </div>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\",\n              padding: 5,\n              marginBottom: 15,\n            }}\n          >\n            <Button\n              icon=\"zoom-in\"\n              large={true}\n              onClick={() => {\n                store.updateState(centerZoom(store.getState(), -1));\n              }}\n            />\n            <Button\n              icon=\"zoom-out\"\n              large={true}\n              onClick={() => {\n                store.updateState(centerZoom(store.getState(), 1));\n              }}\n            />\n          </div>\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default function (props: any) {\n  const { store } = props;\n  const [state, setState] = useState(store.getState());\n  useEffect(() => {\n    store.listen(() => {\n      setState(store.getState());\n    });\n  });\n  return (\n    <Settings\n      {...props}\n      store={store}\n      iterations={state.iterations}\n      samplingRate={state.samplingRate}\n      activeMode={state.mode}\n      modes={state.modes}\n      smooth={state.smooth}\n      interpolation={state.interpolation}\n      radius={state.radius}\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createStore(initialState?: any) {\n  let width = window.innerWidth;\n  let height = (400 / 600) * width;\n\n  if (height > window.innerHeight) {\n    width = (600 / 400) * window.innerHeight;\n    height = window.innerHeight;\n  }\n  const offset = [window.innerWidth - width, window.innerHeight - height];\n\n  let state = {\n    iterations: 0,\n    samplingRate: 1,\n    radius: 2,\n    boundaries: [\n      -2 - (offset[0] / 2) * (3 / width),\n      1 + (offset[0] / 2) * (3 / width),\n      -1 - (offset[1] / 2) * (2 / height),\n      1 + (offset[1] / 2) * (2 / height),\n    ],\n    width: window.innerWidth,\n    height: window.innerHeight,\n    mode: 0,\n    modes: [\"Color\", \"Grey\", \"Black & White\"],\n    smooth: true,\n    interpolation: true,\n    ...initialState,\n  };\n\n  const listeners: Array<(state: any) => {}> = [];\n\n  function getState() {\n    return state;\n  }\n\n  function listen(listener: (state: any) => {}) {\n    listeners.push(listener);\n  }\n\n  function fire() {\n    for (let listener of listeners) {\n      listener(state);\n    }\n  }\n\n  function updateState(newState: any) {\n    if (newState) {\n      state = { ...state, ...newState };\n      fire();\n    }\n  }\n\n  return { getState, updateState, listen, fire };\n}\n\nexport default createStore;\n","import React, { useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Renderer from \"./Renderer\";\nimport Settings from \"./Settings\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport createStore from \"./webgl/store\";\nconst store = createStore({\n  /*\n  boundaries: [-2, 1, -1, 1],\n  width: 600,\n  height: 400,\n  */\n});\n\nconst App = () => {\n  const renderer = useRef(null);\n\n  return (\n    <React.Fragment>\n      <Renderer store={store} ref={renderer} />\n      <Settings store={store} renderer={renderer} />\n    </React.Fragment>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}